2018-08-02 11:16:23 [main] com.zwl.WebApplication[StartupInfoLogger.java:50]-[INFO] Starting WebApplication on DESKTOP-CRATFND with PID 10412 (D:\sass_new\web\target\classes started by dell in D:\sass_new)
2018-08-02 11:16:23 [main] com.zwl.WebApplication[SpringApplication.java:663]-[INFO] The following profiles are active: dev
2018-08-02 11:16:23 [main] o.s.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext[AbstractApplicationContext.java:590]-[INFO] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57abad67: startup date [Thu Aug 02 11:16:23 CST 2018]; root of context hierarchy
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'adminUserMapper' and 'com.zwl.dao.mapper.AdminUserMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classCategoryMapper' and 'com.zwl.dao.mapper.ClassCategoryMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classInfoListenRecordMapper' and 'com.zwl.dao.mapper.ClassInfoListenRecordMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classInfoMapper' and 'com.zwl.dao.mapper.ClassInfoMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classInfoStatisticsMapper' and 'com.zwl.dao.mapper.ClassInfoStatisticsMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classSetMapper' and 'com.zwl.dao.mapper.ClassSetMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classSetShareRecordMapper' and 'com.zwl.dao.mapper.ClassSetShareRecordMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'classSetStatisticsMapper' and 'com.zwl.dao.mapper.ClassSetStatisticsMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'informationCategoryMapper' and 'com.zwl.dao.mapper.InformationCategoryMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'informationMapper' and 'com.zwl.dao.mapper.InformationMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'maidInfoMapper' and 'com.zwl.dao.mapper.MaidInfoMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'merchantMapper' and 'com.zwl.dao.mapper.MerchantMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'operateUserRecordMapper' and 'com.zwl.dao.mapper.OperateUserRecordMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'orderFlowMapper' and 'com.zwl.dao.mapper.OrderFlowMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'orderMapper' and 'com.zwl.dao.mapper.OrderMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'productMapper' and 'com.zwl.dao.mapper.ProductMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'teacherUserMapper' and 'com.zwl.dao.mapper.TeacherUserMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'userAccountMapper' and 'com.zwl.dao.mapper.UserAccountMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'userCertificationMapper' and 'com.zwl.dao.mapper.UserCertificationMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'userInfoMapper' and 'com.zwl.dao.mapper.UserInfoMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'userMapper' and 'com.zwl.dao.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'userQuotaCountMapper' and 'com.zwl.dao.mapper.UserQuotaCountMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'withdrawFlowMapper' and 'com.zwl.dao.mapper.WithdrawFlowMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:239]-[WARN] Skipping MapperFactoryBean with name 'withdrawMapper' and 'com.zwl.dao.mapper.WithdrawMapper' mapperInterface. Bean already defined with the same name!
2018-08-02 11:16:24 [main] org.mybatis.spring.mapper.ClassPathMapperScanner[ClassPathMapperScanner.java:166]-[WARN] No MyBatis mapper was found in '[com.zwl.dao.mapper]' package. Please check your configuration.
2018-08-02 11:16:24 [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate[RepositoryConfigurationDelegate.java:163]-[INFO] Multiple Spring Data modules found, entering strict repository configuration mode!
2018-08-02 11:16:24 [main] o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[PostProcessorRegistrationDelegate.java:328]-[INFO] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ef416a6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-02 11:16:25 [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer[TomcatWebServer.java:91]-[INFO] Tomcat initialized with port(s): 8080 (http)
2018-08-02 11:16:25 [main] org.apache.coyote.http11.Http11NioProtocol[DirectJDKLog.java:180]-[INFO] Initializing ProtocolHandler ["http-nio-8080"]
2018-08-02 11:16:25 [main] org.apache.catalina.core.StandardService[DirectJDKLog.java:180]-[INFO] Starting service [Tomcat]
2018-08-02 11:16:25 [main] org.apache.catalina.core.StandardEngine[DirectJDKLog.java:180]-[INFO] Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-02 11:16:25 [localhost-startStop-1] org.apache.catalina.core.AprLifecycleListener[DirectJDKLog.java:180]-[INFO] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_171\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.8.0_171\bin;D:\develop\apache-maven-3.5.3\bin;C:\Program Files\Git\cmd;;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;%SYSTEMROOT%\System32\OpenSSH\;C:\Users\dell\AppData\Local\Programs\Python\Python37-32\Scripts\;C:\Users\dell\AppData\Local\Programs\Python\Python37-32\;C:\Users\dell\AppData\Local\Microsoft\WindowsApps;;.]
2018-08-02 11:16:25 [localhost-startStop-1] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][DirectJDKLog.java:180]-[INFO] Initializing Spring embedded WebApplicationContext
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.web.context.ContextLoader[ServletWebServerApplicationContext.java:285]-[INFO] Root WebApplicationContext: initialization completed in 1866 ms
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.boot.web.servlet.ServletRegistrationBean[ServletRegistrationBean.java:186]-[INFO] Servlet dispatcherServlet mapped to [/]
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.boot.web.servlet.FilterRegistrationBean[AbstractFilterRegistrationBean.java:245]-[INFO] Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.boot.web.servlet.FilterRegistrationBean[AbstractFilterRegistrationBean.java:245]-[INFO] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.boot.web.servlet.FilterRegistrationBean[AbstractFilterRegistrationBean.java:245]-[INFO] Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.boot.web.servlet.FilterRegistrationBean[AbstractFilterRegistrationBean.java:245]-[INFO] Mapping filter: 'requestContextFilter' to: [/*]
2018-08-02 11:16:25 [localhost-startStop-1] org.springframework.boot.web.servlet.FilterRegistrationBean[AbstractFilterRegistrationBean.java:258]-[INFO] Mapping filter: 'tokenFilter' to urls: [/wx/*]
2018-08-02 11:16:26 [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[AbstractUrlHandlerMapping.java:373]-[INFO] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter[RequestMappingHandlerAdapter.java:574]-[INFO] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57abad67: startup date [Thu Aug 02 11:16:23 CST 2018]; root of context hierarchy
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/certification/modifyById],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.CertificationController.modifyById(com.zwl.model.po.UserCertification)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/certification/add],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.CertificationController.addCertification(com.zwl.model.po.UserCertification)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/certification/getOneByUserId],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.CertificationController.getOneByUserId(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/classinfo/getById],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.ClassInfoController.getById(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/classinfo/setpAddBrowseCount],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.ClassInfoController.setpAddBrowseCount(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/classinfo/getPageByClassSetId],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.ClassInfoController.getPageByClassSetId(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/classset/getPageAllClass],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.ClassSetController.getPageAllClass(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/classset/getById],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.ClassSetController.getById(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/classset/setpAddBrowseCount],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.ClassSetController.setpAddBrowseCount(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/gzh/getGzhOpenId],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.GZController.getGzhOpenId(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/gzh/sendFormId],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.GZController.saveFormIdToRedis(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/gzh/getFormId],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.GZController.getFormIdFromRedis(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/information/getInformationList],methods=[POST]}" onto public java.lang.String com.zwl.controller.InformationController.getInformationList(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/maidInfo/auth/getMaidInfoList],methods=[POST]}" onto public java.lang.String com.zwl.controller.MaidInfoController.getMaidInfoList(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/product/getProductById],methods=[POST]}" onto public java.lang.String com.zwl.controller.ProductController.getProductById(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/product/auth/buy],methods=[POST]}" onto public java.lang.String com.zwl.controller.ProductController.buy(com.zwl.model.po.Product)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/product/H5Buy],methods=[POST]}" onto public java.lang.String com.zwl.controller.ProductController.h5Buy(com.zwl.model.po.Product)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/product/getProductList],methods=[POST]}" onto public java.lang.String com.zwl.controller.ProductController.getProductList(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/useraccount/getBalance],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.UserAccountController.getBalance(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/user/getUserInfoByUserId],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.UserController.getUserInfoByUserId(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/user/sendMsgCode],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.UserController.sendRegisterCode(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/user/shareRelation],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.UserController.shareRelation(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/user/bindingMobile],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.UserController.bindMobile(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/user/authorization],methods=[POST]}" onto public com.zwl.model.baseresult.Result com.zwl.controller.UserController.authorization(com.zwl.model.vo.UserLoginInfoVo)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/withdraw/auth/apply],methods=[POST]}" onto public java.lang.String com.zwl.controller.WithdrawController.apply(com.zwl.model.po.Withdraw)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/withdraw/auth/getWithdrawList],methods=[POST]}" onto public java.lang.String com.zwl.controller.WithdrawController.getWithdrawList(com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/pay/pay_notify.do],methods=[POST || GET]}" onto public java.lang.String com.zwl.controller.WxPayController.pay_notify(javax.servlet.http.HttpServletRequest)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/pay/auth/androidPay.do],methods=[POST]}" onto public java.lang.String com.zwl.controller.WxPayController.androidPay(javax.servlet.http.HttpServletRequest,com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/pay/auth/pay.do],methods=[POST]}" onto public java.lang.String com.zwl.controller.WxPayController.wapPay(javax.servlet.http.HttpServletRequest,com.alibaba.fastjson.JSONObject)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/wx/task/task],methods=[GET]}" onto public void com.zwl.controller.WxPayTask.queryOrderStatus()
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-02 11:16:27 [main] o.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping[AbstractHandlerMethodMapping.java:547]-[INFO] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-02 11:16:27 [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[AbstractUrlHandlerMapping.java:373]-[INFO] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-02 11:16:27 [main] org.springframework.web.servlet.handler.SimpleUrlHandlerMapping[AbstractUrlHandlerMapping.java:373]-[INFO] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-02 11:16:27 [main] o.s.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver[ExceptionHandlerExceptionResolver.java:288]-[INFO] Detected @ExceptionHandler methods in globalExceptionHandler
2018-08-02 11:16:27 [main] org.springframework.ui.freemarker.SpringTemplateLoader[SpringTemplateLoader.java:62]-[INFO] SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57abad67: startup date [Thu Aug 02 11:16:23 CST 2018]; root of context hierarchy] and template loader path [classpath:/templates/]
2018-08-02 11:16:27 [main] org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer[FreeMarkerConfigurer.java:131]-[INFO] ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-08-02 11:16:27 [main] org.springframework.jmx.export.annotation.AnnotationMBeanExporter[MBeanExporter.java:433]-[INFO] Registering beans for JMX exposure on startup
2018-08-02 11:16:27 [main] org.springframework.jmx.export.annotation.AnnotationMBeanExporter[MBeanExporter.java:895]-[INFO] Bean with name 'masterDataSource' has been autodetected for JMX exposure
2018-08-02 11:16:27 [main] org.springframework.jmx.export.annotation.AnnotationMBeanExporter[MBeanExporter.java:895]-[INFO] Bean with name 'slaveDataSource' has been autodetected for JMX exposure
2018-08-02 11:16:27 [main] org.springframework.jmx.export.annotation.AnnotationMBeanExporter[MBeanExporter.java:668]-[INFO] Located MBean 'masterDataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=masterDataSource,type=HikariDataSource]
2018-08-02 11:16:27 [main] org.springframework.jmx.export.annotation.AnnotationMBeanExporter[MBeanExporter.java:668]-[INFO] Located MBean 'slaveDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=slaveDataSource,type=DruidDataSource]
2018-08-02 11:16:27 [main] org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor[ScheduledAnnotationBeanPostProcessor.java:275]-[INFO] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2018-08-02 11:16:27 [main] org.apache.coyote.http11.Http11NioProtocol[DirectJDKLog.java:180]-[INFO] Starting ProtocolHandler ["http-nio-8080"]
2018-08-02 11:16:27 [main] org.apache.tomcat.util.net.NioSelectorPool[DirectJDKLog.java:180]-[INFO] Using a shared selector for servlet write/read
2018-08-02 11:16:27 [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer[TomcatWebServer.java:206]-[INFO] Tomcat started on port(s): 8080 (http) with context path ''
2018-08-02 11:16:27 [main] com.zwl.WebApplication[StartupInfoLogger.java:59]-[INFO] Started WebApplication in 5.251 seconds (JVM running for 6.073)
2018-08-02 11:17:16 [http-nio-8080-exec-2] org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/][DirectJDKLog.java:180]-[INFO] Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-02 11:17:16 [http-nio-8080-exec-2] org.springframework.web.servlet.DispatcherServlet[FrameworkServlet.java:494]-[INFO] FrameworkServlet 'dispatcherServlet': initialization started
2018-08-02 11:17:16 [http-nio-8080-exec-2] org.springframework.web.servlet.DispatcherServlet[FrameworkServlet.java:509]-[INFO] FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2018-08-02 11:17:16 [http-nio-8080-exec-2] com.zwl.filter.TokenFilter[TokenFilter.java:45]-[INFO] <<token>>请求url:http://localhost:8080/wx/classset/getPageAllClass  token:null
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy95, method:selectAllClassOrderById, args:1509688041 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectAllClassOrderById 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectAllClassOrderById方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.alibaba.druid.pool.DruidDataSource[DruidDataSource.java:889]-[INFO] {dataSource-1} inited
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy97, method:selectByClassSetId, args:4 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassSetId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassSetId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy91, method:getLogoUrlByClassSetId, args:4 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>getLogoUrlByClassSetId 方法使用的数据源为:get<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>getLogoUrlByClassSetId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:7 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:8 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:9 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:10 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:11 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:12 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:13 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:14 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:15 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:16 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:18 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:19 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:20 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:41]-[INFO] className:com.sun.proxy.$Proxy93, method:selectByClassInfoId, args:21 
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:47]-[INFO] >>selectByClassInfoId 方法使用的数据源为:select<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.aop.DataSourceAspect[DataSourceAspect.java:50]-[INFO] >>selectByClassInfoId方法使用的数据源为:DatabaseType{name='read'}<<
2018-08-02 11:17:17 [http-nio-8080-exec-2] com.zwl.dao.config.DynamicDataSource[DynamicDataSource.java:27]-[INFO] ====================dataSource ==========DatabaseType{name='read'}
