<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwl.dao.mapper.OfflineActivityThemeMapper" >
  <resultMap id="BaseResultMap" type="com.zwl.model.po.OfflineActivityTheme" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="theme_name" property="themeName" jdbcType="VARCHAR" />
    <result column="theme_href_url" property="themeHrefUrl" jdbcType="INTEGER" />
    <result column="theme_type" property="themeType" jdbcType="INTEGER" />
    <result column="content_text" property="contentText" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zwl.model.po.OfflineActivityTheme" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, theme_name, theme_href_url, theme_type, content_text, create_time, modify_time, 
    available
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ss_offline_activity_theme
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ss_offline_activity_theme
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zwl.model.po.OfflineActivityTheme" >
    insert into ss_offline_activity_theme (id, theme_name, theme_href_url, 
      theme_type, content_text, create_time, 
      modify_time, available, content
      )
    values (#{id,jdbcType=INTEGER}, #{themeName,jdbcType=VARCHAR}, #{themeHrefUrl,jdbcType=INTEGER}, 
      #{themeType,jdbcType=INTEGER}, #{contentText,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{available,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zwl.model.po.OfflineActivityTheme" >
    insert into ss_offline_activity_theme
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="themeName != null" >
        theme_name,
      </if>
      <if test="themeHrefUrl != null" >
        theme_href_url,
      </if>
      <if test="themeType != null" >
        theme_type,
      </if>
      <if test="contentText != null" >
        content_text,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="available != null" >
        available,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="themeName != null" >
        #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="themeHrefUrl != null" >
        #{themeHrefUrl,jdbcType=INTEGER},
      </if>
      <if test="themeType != null" >
        #{themeType,jdbcType=INTEGER},
      </if>
      <if test="contentText != null" >
        #{contentText,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwl.model.po.OfflineActivityTheme" >
    update ss_offline_activity_theme
    <set >
      <if test="themeName != null" >
        theme_name = #{themeName,jdbcType=VARCHAR},
      </if>
      <if test="themeHrefUrl != null" >
        theme_href_url = #{themeHrefUrl,jdbcType=INTEGER},
      </if>
      <if test="themeType != null" >
        theme_type = #{themeType,jdbcType=INTEGER},
      </if>
      <if test="contentText != null" >
        content_text = #{contentText,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zwl.model.po.OfflineActivityTheme" >
    update ss_offline_activity_theme
    set theme_name = #{themeName,jdbcType=VARCHAR},
      theme_href_url = #{themeHrefUrl,jdbcType=INTEGER},
      theme_type = #{themeType,jdbcType=INTEGER},
      content_text = #{contentText,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      available = #{available,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwl.model.po.OfflineActivityTheme" >
    update ss_offline_activity_theme
    set theme_name = #{themeName,jdbcType=VARCHAR},
      theme_href_url = #{themeHrefUrl,jdbcType=INTEGER},
      theme_type = #{themeType,jdbcType=INTEGER},
      content_text = #{contentText,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>