<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwl.dao.mapper.WithdrawMapper" >
  <resultMap id="BaseResultMap" type="com.zwl.model.po.Withdraw" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="withdraw_id" property="withdrawId" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="pay_way" property="payWay" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="success_time" property="successTime" jdbcType="TIMESTAMP" />
    <result column="payment_no" property="paymentNo" jdbcType="VARCHAR" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, withdraw_id, money, open_id, real_name, user_id, account, status, pay_way, operator, 
    remark, success_time, payment_no, payment_time, create_time, modify_time, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ss_withdraw
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ss_withdraw
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zwl.model.po.Withdraw" >
    insert into ss_withdraw (id, withdraw_id, money, 
      open_id, real_name, user_id, 
      account, status, pay_way, 
      operator, remark, success_time, 
      payment_no, payment_time, create_time, 
      modify_time, available)
    values (#{id,jdbcType=BIGINT}, #{withdrawId,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER}, 
      #{openId,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{payWay,jdbcType=INTEGER}, 
      #{operator,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{successTime,jdbcType=TIMESTAMP}, 
      #{paymentNo,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true" parameterType="com.zwl.model.po.Withdraw" >
    insert into ss_withdraw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="withdrawId != null" >
        withdraw_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="successTime != null" >
        success_time,
      </if>
      <if test="paymentNo != null" >
        payment_no,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="withdrawId != null" >
        #{withdrawId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="successTime != null" >
        #{successTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentNo != null" >
        #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwl.model.po.Withdraw" >
    update ss_withdraw
    <set >
      <if test="withdrawId != null" >
        withdraw_id = #{withdrawId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="successTime != null" >
        success_time = #{successTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentNo != null" >
        payment_no = #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwl.model.po.Withdraw" >
    update ss_withdraw
    set withdraw_id = #{withdrawId,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      pay_way = #{payWay,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      success_time = #{successTime,jdbcType=TIMESTAMP},
      payment_no = #{paymentNo,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getWithdrawList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from ss_withdraw
    where available=1
  </select>
  <select id="getWithdrawListByUserId" resultMap="BaseResultMap" parameterType="string">
    select
    <include refid="Base_Column_List"/>
    from ss_withdraw
    where available=1
    and user_id=#{userId}
  </select>
</mapper>