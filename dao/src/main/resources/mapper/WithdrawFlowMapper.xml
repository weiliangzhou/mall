<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwl.dao.mapper.WithdrawFlowMapper" >
  <resultMap id="BaseResultMap" type="com.zwl.model.WithdrawFlow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="withdraw_id" property="withdrawId" jdbcType="VARCHAR" />
    <result column="success_time" property="successTime" jdbcType="TIMESTAMP" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="payment_no" property="paymentNo" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="merchant_id" property="merchantId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="available" property="available" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, withdraw_id, success_time, payment_time, payment_no, status, operator, merchant_id, 
    create_time, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ss_withdraw_flow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ss_withdraw_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zwl.model.WithdrawFlow" >
    insert into ss_withdraw_flow (id, withdraw_id, success_time, 
      payment_time, payment_no, status, 
      operator, merchant_id, create_time, 
      available)
    values (#{id,jdbcType=BIGINT}, #{withdrawId,jdbcType=VARCHAR}, #{successTime,jdbcType=TIMESTAMP},
      #{paymentTime,jdbcType=TIMESTAMP}, #{paymentNo,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT},
      #{operator,jdbcType=VARCHAR}, #{merchantId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{available,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zwl.model.WithdrawFlow" >
    insert into ss_withdraw_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="withdrawId != null" >
        withdraw_id,
      </if>
      <if test="successTime != null" >
        success_time,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="paymentNo != null" >
        payment_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="withdrawId != null" >
        #{withdrawId,jdbcType=VARCHAR},
      </if>
      <if test="successTime != null" >
        #{successTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentNo != null" >
        #{paymentNo,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        #{available,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwl.model.WithdrawFlow" >
    update ss_withdraw_flow
    <set >
      <if test="withdrawId != null" >
        withdraw_id = #{withdrawId,jdbcType=VARCHAR},
      </if>
      <if test="successTime != null" >
        success_time = #{successTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentNo != null" >
        payment_no = #{paymentNo,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwl.model.WithdrawFlow" >
    update ss_withdraw_flow
    set withdraw_id = #{withdrawId,jdbcType=VARCHAR},
      success_time = #{successTime,jdbcType=TIMESTAMP},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      payment_no = #{paymentNo,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      operator = #{operator,jdbcType=VARCHAR},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      available = #{available,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>