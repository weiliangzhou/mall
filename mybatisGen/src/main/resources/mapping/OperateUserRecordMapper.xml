<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwl.mapper.OperateUserRecordMapper" >
  <resultMap id="BaseResultMap" type="com.zwl.model.OperateUserRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="merchant_id" property="merchantId" jdbcType="VARCHAR" />
    <result column="before_level" property="beforeLevel" jdbcType="SMALLINT" />
    <result column="after_level" property="afterLevel" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, operator, user_id, merchant_id, before_level, after_level, create_time, modify_time, 
    available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ss_operate_user_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ss_operate_user_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zwl.model.OperateUserRecord" >
    insert into ss_operate_user_record (id, operator, user_id, 
      merchant_id, before_level, after_level, 
      create_time, modify_time, available
      )
    values (#{id,jdbcType=BIGINT}, #{operator,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{merchantId,jdbcType=VARCHAR}, #{beforeLevel,jdbcType=SMALLINT}, #{afterLevel,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{available,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zwl.model.OperateUserRecord" >
    insert into ss_operate_user_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="beforeLevel != null" >
        before_level,
      </if>
      <if test="afterLevel != null" >
        after_level,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="beforeLevel != null" >
        #{beforeLevel,jdbcType=SMALLINT},
      </if>
      <if test="afterLevel != null" >
        #{afterLevel,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwl.model.OperateUserRecord" >
    update ss_operate_user_record
    <set >
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="beforeLevel != null" >
        before_level = #{beforeLevel,jdbcType=SMALLINT},
      </if>
      <if test="afterLevel != null" >
        after_level = #{afterLevel,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwl.model.OperateUserRecord" >
    update ss_operate_user_record
    set operator = #{operator,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      before_level = #{beforeLevel,jdbcType=SMALLINT},
      after_level = #{afterLevel,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>